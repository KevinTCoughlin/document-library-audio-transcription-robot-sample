@model OneDriveDataRobot.Models.HomeModel
@{
    ViewBag.Title = "Home Page";
}
<script type="text/javascript" src="https://js.live.net/v7.2/OneDrive.js"></script>
<div class="jumbotron">
    <div class="container">
        <div class="row">
            <div class="col-md-8">
                <h1>OneDrive Data Robot</h1>
                <p class="lead">Sample code project using Microsoft Graph and OneDrive developer platform.</p>
            </div>
            <div class="col-md-1">&nbsp;</div>
            <div class="col-md-3">&nbsp;</div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <h2>Getting started</h2>
        <p>
            This sample code project provides an example of using Azure Functions to respond to webhook notifications generated by OneDrive users.
            The data robot can monitor changes to files, and respond in near real-time.
            For more information, see the sample code source: <a href="https://github.com/onedrive/onedrive-data-robot-azure-function">onedrive-data-robot-azure-function</a>.
        </p>
    </div>
    <div class="col-md-6">
        @if (!string.IsNullOrEmpty(Model.SignInName))
        {
            <h2>Signed In</h2>
            <p>Hello @Model.DisplayName! I'm the OneDrive data robot. I'm ready to start creating transcriptions of audio files in a document library of your choice.</p>
            <p id="results"></p>

            <p>
                <a class="btn btn-default" id="btnActivate" href="#" onclick="selectDocumentLibrary();">Start watching a document library</a>
                <a class="btn btn-default" id="btnDeactivate" href="#" onclick="disableRobot();">Disable</a>
            </p>
        }
        else
        {
            <h2>Sign-In</h2>
            <p>@Html.ActionLink("Sign in", "SignIn", "Account") to get started.</p>
        }
    </div>
</div>

<script>

    function selectDocumentLibrary() {
        var odOptions = {
            clientId: "abc", // Refactor to use config variable?
            action: "query",
            multiSelect: false,
            advanced:
            {
                redirectUri: "https://localhost:44382/filePickerRedirect.htm"
            },
            success: function (files)
            {
                // Send the selected folder location to our web API to provision the library
                var location = files.value[0];
                var driveId = location.parentReference.driveId
                activateRobot(driveId);
            }
        }
        OneDrive.save(odOptions);
    }

    function activateRobot(driveId) {
        var url = "/api/Setup/ActivateRobot?driveId=" + encodeURIComponent(driveId);
        $("#results").text("Activating robot... hold on.");
        
        $.ajax({
            method: "POST",
            url: url,
            success: function (data, status, xhr) {
                if (!data.Success) {
                    $("#results").text("Error activating robot: " + data.Error);
                } else {
                    $("#results").html("<b>Robot activated!</b><br />Subscription Id: " + data.SubscriptionId + "<br />Expiration: " + data.ExpirationDateTime);
                }
            },
            error: function (xhr, status, errorThrown) {
                $("#results").text("Error activating robot: " + errorThrown);
            }
        });
    }
    function disableRobot() {
        var url = "/api/Setup/DisableRobot";
        $("#results").text("Disabling robot... hold on.");

        $.ajax({
            method: "POST",
            url: url,
            success: function (data, status, xhr) {
                if (!data.Success) {
                    $("#results").text("Error disabling robot: " + data.Error);
                } else {
                    $("#results").html("<b>Robot disabled</b> " + data.Error);
                }
            },
            error: function (xhr, status, errorThrown) {
                $("#results").text("Error disabling robot: " + errorThrown);
            }
        });
    }
</script>
